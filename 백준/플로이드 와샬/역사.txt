#include "pch.h"
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <stack>
#include <queue>
using namespace std;

int N, K, S;
int INF = 987654321;

int adj[401][401];
vector<pair<int, int>> targets;

int main()
{
	scanf_s("%d %d", &N, &K);

	for (int i = 1; i <= N; i++)
	{
		for (int j = 1; j <= N; j++)
		{
			if (i == j)
				adj[i][j] = 0;
			else
				adj[i][j] = INF;
		}
	}

	for (int i = 0; i < K; i++)
	{
		int a, b;
		scanf_s("%d %d", &a, &b);
		adj[a][b] = 1;
	}

	scanf_s("%d", &S);

	for (int i = 0; i < S; i++)
	{
		int a, b;
		scanf_s("%d %d", &a, &b);
		targets.push_back(make_pair(a, b));
	}

	for (int k = 1; k <= N; k++)
	{
		for (int i = 1; i <= N; i++)
		{
			for (int j = 1; j <= N; j++)
			{
				adj[i][j] = min(adj[i][j], adj[i][k] + adj[k][j]);
			}
		}
	}

	for (int i = 0; i < targets.size(); i++)
	{
		int a = targets[i].first;
		int b = targets[i].second;
		
		if (adj[a][b] != INF)
			printf("-1\n");
		else
		{
			if (adj[b][a] != INF)
				printf("1\n");
			else
				printf("0\n");
		}
	}

	return 0;
}