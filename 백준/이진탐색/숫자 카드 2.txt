#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

int N;
int M;

vector<int> numbers;
vector<int> finds;


//upper, lower bound를 찾아야함, 2진으로 찾고 양 옆으로 퍼뜨리는건 타임오버
int main()
{
	scanf_s("%d", &N);

	for (int i = 0; i < N; i++)
	{
		int temp;
		scanf_s("%d", &temp);
		numbers.push_back(temp);
	}

	scanf_s("%d", &M);

	for (int i = 0; i < M;i++)
	{
		int temp; 
		scanf_s("%d", &temp);
		finds.push_back(temp);
	}

	sort(numbers.begin(), numbers.end());

	for (int i = 0; i < M; i++)
	{
		int low = 0;
		int high = N-1;

		int lower = 0;
		int upper = 0;

		//lower
		while (low < high)
		{
			int mid = (low + high) / 2;

			if (numbers[mid] >= finds[i])
				high = mid;

			else
				low = mid + 1;
		}
		lower = high;

		low = 0;
		high = N - 1;

		while (low < high)
		{
			int mid = (low + high) / 2;

			if (numbers[mid] > finds[i])
				high = mid;
			else
				low = mid + 1;
		}

		//아직 마지막꺼는 조사 못했으니까
		if (high == N - 1 && numbers[N-1] == finds[i])
			upper = N;
		else
			upper = high;

		printf("%d ", upper - lower);
	}

	return 0;
}