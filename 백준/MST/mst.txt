#include <queue>
#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int V, E;
int INF = 987654321;
vector<vector<pair<int, int>>> adj;

int main()
{
    //입력
    scanf_s("%d %d", &V, &E);
    adj.resize(V + 1, vector<pair<int, int>>());

    for (int i = 0; i < E; i++)
    {
        int a, b, c;
        scanf_s("%d %d %d", &a, &b, &c);
        adj[a].push_back(make_pair(c,b));
        adj[b].push_back(make_pair(c,a));
    }

    //prim
    int answer = 0;

    vector<int> minW(V + 1, INF);
    vector<bool> added(V + 1, false);
    minW[1] = 0;

    for (int iter = 0; iter < V; iter++)
    {
        int u = -1;
        for (int i = 1; i <= V; i++)
        {
            if (!added[i] && (u == -1 || minW[u] > minW[i]))
                u = i;
        }

        answer += minW[u];
        added[u] = true;
        
        for (int i = 0; i < adj[u].size(); i++)
        {
            int there = adj[u][i].second;
            int cost = adj[u][i].first;
            if (!added[there] && minW[there] > cost)
            {
                minW[there] = cost;
            }
        }
    }

    printf("%d\n", answer);

    return 0;
}