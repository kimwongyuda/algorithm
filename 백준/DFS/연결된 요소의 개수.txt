#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

int N;
int M;

//R 0, G 1, B 2
int vertexs[1001];
bool visited[1001];

vector<vector<int>> adj;

int count_ = 0;

void dfs(int here)
{
	visited[here] = true;

	for (int i = 0; i < adj[here].size(); i++)
	{
		int there = adj[here][i];

		if (!visited[there])
		{
			dfs(there);
		}
	}
}

int main()
{
	//ios_base::sync_with_stdio(false);
	//cin.tie(NULL);
	//cout.tie(NULL);

	scanf("%d", &N);
	scanf("%d", &M);
	
	adj.resize(N+1, vector<int>());

	//input 및 초기화
	for (int i = 0; i < M; i++)
	{
		int a;
		int b;
		scanf("%d", &a);
		scanf("%d", &b);

		adj[a].push_back(b);
		adj[b].push_back(a);
	}

	for (int i = 1; i < N +1; i++)
	{
		if (!visited[i])
		{
			dfs(i);
			count_++;
		}
	}

	printf("%d\n", count_);

	return 0;
}