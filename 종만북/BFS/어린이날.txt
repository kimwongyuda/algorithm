#include <iostream>
#include <algorithm>
#include <vector>
#include <list>
#include <string>
#include <map>
#include <queue>>

using namespace std;


int N;
int M;

string digits;

//어린이날
//그래프가 굳이 필요 없음(adj가 필요없음)
//수적 관계(mod)로 그래프를 대신할 수 있다.

int get_mod(int here, int edge)
{
	int temp = here * 10 + edge;

	if (temp >= N)
		return N + temp % N;

	return temp % N;
}

string bfs()
{
	vector<int> parent(2*N, -1);
	vector<int> choice(2*N, -1);

	queue<int> q;
	parent[0] = 0;
	q.push(0);

	while (!q.empty())
	{
		int here = q.front();
		q.pop();

		for (int i = 0; i < digits.size(); i++)
		{
			int there = get_mod(here, digits[i] - '0');
			if (parent[there] == -1)
			{
				parent[there] = here;
				choice[there] = digits[i] - '0';
				q.push(there);
			}
		}
	}

	if (parent[N + M] == -1)
		return "IMPOSSIBLE";

	string ret = "";

	int here = N + M;

	while (parent[here] != here)
	{
		ret += char( '0' + choice[here] );
		here = parent[here];
	}

	reverse(ret.begin(), ret.end());
	return ret;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	cin >> digits;
	cin >> N;
	cin >> M;

	//최소의 c? digits를 정렬
	sort(digits.begin(), digits.end());

	cout << bfs() << '\n';

	return 0;
}