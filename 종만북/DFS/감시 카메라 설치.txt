#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>

using namespace std;

int g;
int h;

//인접 리스트
vector<vector<int>> adj;
vector<bool> visited;
int installed;

int dfs(int here)
{
	visited[here] = true;
	//unwatched, watched, installed
	int cases[3] = { 0, 0, 0 };

	for (int i = 0; i < adj[here].size(); i++)
	{
		int there = adj[here][i];
		if (!visited[there])
			cases[dfs(there)]++;
	}

	if (cases[0])
	{
		installed++;
		return 2;
	}

	if (cases[2])
	{
		return 1;
	}

	return 0;
}

int main()
{
	scanf_s("%d", &g);
	scanf_s("%d", &h);

	adj.resize(g);
	visited.resize(g);
	installed = 0;

	for (int i = 0; i < h; i++)
	{
		int a;
		int b;
		scanf_s("%d %d", &a, &b);
		adj[a].push_back(b);
	}

	for (int i = 0; i < g; i++)
	{
		if (!visited[i])
		{
			int temp = dfs(i);
			if (temp == 0)
				installed++;
		}
	}

	printf("%d\n", installed);

	return 0;
}